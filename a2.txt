使用多线程
多线程
简单的说，线程就是在同一程序在同一时间允许执行不同函数的离散处理队列，这个特性使得一个需要长时间处理的函数不会去阻碍其它函数，从而实现允许同事执行两个不同的函数。
为何选择多线程
在本程序 无论是服务器界面还是聊天室界面都要从网络获取信息，由于网络的复杂导致获取信息的时间变得不可预估，一但延迟增大界面就会堵塞而导致不能使用，更加严重的是如果堵塞的时间过长就会被操作系统视为出错未响应从而导致程序被强行终止。即使网络良好，由于本程序有接收文件的功能，如果接收的文件过大同样会导致界面的长时间堵塞，因此引入多线程是一件必然的事情。
使用qt多线程
本程序的界面制作使用的是qt，在qt中只允许一个线程对界面进行操作，线程叫做主线程也叫做界面线程，从其它线程进行的任何操作界面的行为都会引发一个异常导致程序崩溃，所以如果想让界面得到其它线程获取的网络数据只能通过 qt自带的线程类QThread 通过它发送消息使用一个叫做信号\槽的机制实现线程间的通讯

异步代替同步 
虽然线程是强大的，但是我们不能为每一个有可能非常耗时的操作开启一个线程，由于服务器要管理所有的连接用户，如果给每一个用户开启一个线程即使不考虑操作系统所允许的最大线程数，操作系统过于频繁的切换线程造所成的cpu浪费也是不可接受的，因此在客户和服务端对于每个用户在类似于接受报文，发送报文等操作上使用了非阻塞的处理方式代了替同步操作。